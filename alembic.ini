# A generic, single database configuration.

[alembic]

script_location = %(here)s/alembic
prepend_sys_path = src/
# timezone =

# truncate_slug_length = 40

# revision_environment = false

# sourceless = false

# version_locations = %(here)s/bar:%(here)s/bat:%(here)s/alembic/versions

# path_separator = :
# path_separator = ;
# path_separator = space
# path_separator = newline

path_separator = os

# recursive_version_locations = false

# output_encoding = utf-8

sqlalchemy.url = set_in_env.py


[post_write_hooks]

# format using "black" - use the console_scripts runner, against the "black" entrypoint
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

hooks = ruff
ruff.type = module
ruff.module = ruff
ruff.options = check --fix REVISION_SCRIPT_FILENAME

# Alternatively, use the exec runner to execute a binary found on your PATH
# hooks = ruff
# ruff.type = exec
# ruff.executable = ruff
# ruff.options = check --fix REVISION_SCRIPT_FILENAME

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console
qualname =

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
